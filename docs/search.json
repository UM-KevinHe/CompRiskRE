[{"path":"https://umkevinhe.github.io/CompRiskRE/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Yubo Shao. Author, maintainer. Qinmengge Li. Author.","code":""},{"path":"https://umkevinhe.github.io/CompRiskRE/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Shao Y, Li Q (2025). CompRiskRE: Relative Entropy Integration Competing Risks Models. R package version 0.0.1, https://github.com/UM-KevinHe/CompRiskRE.","code":"@Manual{,   title = {CompRiskRE: Relative Entropy Integration for Competing Risks Models},   author = {Yubo Shao and Qinmengge Li},   year = {2025},   note = {R package version 0.0.1},   url = {https://github.com/UM-KevinHe/CompRiskRE}, }"},{"path":"https://umkevinhe.github.io/CompRiskRE/index.html","id":"relative-entropy-based-competing-risk-models","dir":"","previous_headings":"","what":"Relative Entropy Integration for Competing Risks Models","title":"Relative Entropy Integration for Competing Risks Models","text":"software package paper “Cause-Specific Multinomial Relative Entropy-Based Discrete Relative Risk Models Integrated Prediction Competing Risk”.","code":""},{"path":"https://umkevinhe.github.io/CompRiskRE/index.html","id":"introduction","dir":"","previous_headings":"","what":"Introduction","title":"Relative Entropy Integration for Competing Risks Models","text":"Competing risks frequently encountered clinical studies, prediction models face challenges low event rates, limited sample sizes, high dimensionality, leading unstable parameter estimation poor performance. Existing survival data integration methods primarily designed single-event outcomes, assume homogeneity across data sources, built classical regression frameworks linear covariate effects. limitations prevent direct incorporation heterogeneous partially overlapping information historical models, especially new data provide event-type–specific outcomes historical models report aggregated failures. overcome limitations, propose multinomial relative entropy–based discrete competing risk integration procedure. method enables robust integration published prediction models new competing risk data, adaptively adjusts weight historical information, accommodates partial covariate overlap, handles incomplete historical information, requires summary-level inputs protect patient privacy, computationally efficient readily adaptable various machine learning frameworks.","code":""},{"path":"https://umkevinhe.github.io/CompRiskRE/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Relative Entropy Integration for Competing Risks Models","text":"TBD","code":""},{"path":"https://umkevinhe.github.io/CompRiskRE/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Relative Entropy Integration for Competing Risks Models","text":"","code":"#Install the package, need to install the devtools packages: devtools::install_github(\"UM-KevinHe/CompRiskRE\")"},{"path":"https://umkevinhe.github.io/CompRiskRE/index.html","id":"using-compriskre","dir":"","previous_headings":"","what":"Using CompRiskRE","title":"Relative Entropy Integration for Competing Risks Models","text":"beta_cor: numeric correlation level external local models. eta: numeric vector Relative Entropy regularization parameters. N_ext: sample size external data (default: 5000). N_loc: sample size local data (default: 2000). N_val: sample size validation data (default: 200). N_test: sample size test data (default: 5000). nCause: number competing causes (default: 2). mu: mean covariates (default: 1). sigma: standard deviation covariates (default: 0.05). seed: random seed reproducibility.","code":"#Use CompRiskRE estimate eta <- generate_eta(method = \"exponential\", n = 30, max_eta = 30) CompRiskRE_FT(   beta_cor = 0.9,   eta = eta,   N_ext = 5000,   N_loc = 2000,   N_val = 200,   N_test = 5000,   nCause = 2,   mu = 1,   sigma = 0.05,   seed = 2024 )"},{"path":"https://umkevinhe.github.io/CompRiskRE/reference/CindexCR.html","id":null,"dir":"Reference","previous_headings":"","what":"Concordance Index for Competing Risk Models — CindexCR","title":"Concordance Index for Competing Risk Models — CindexCR","text":"Computes concordance index (C-index) competing risks setting.","code":""},{"path":"https://umkevinhe.github.io/CompRiskRE/reference/CindexCR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Concordance Index for Competing Risk Models — CindexCR","text":"","code":"CindexCR(time, status, predicted, Cause_int = 1)"},{"path":"https://umkevinhe.github.io/CompRiskRE/reference/CindexCR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Concordance Index for Competing Risk Models — CindexCR","text":"time numeric vector observed survival times (must positive). status integer vector indicating event status: 0 = censored 1 = cause 1 event 2 = cause 2 event predicted numeric vector predicted event probabilities corresponding Cause_int. Cause_int integer specifying cause failure (1 2) evaluate concordance index .","code":""},{"path":"https://umkevinhe.github.io/CompRiskRE/reference/CindexCR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Concordance Index for Competing Risk Models — CindexCR","text":"numeric scalar giving concordance index   (value 0 1).","code":""},{"path":"https://umkevinhe.github.io/CompRiskRE/reference/CompRiskRE-package.html","id":null,"dir":"Reference","previous_headings":"","what":"CompRiskRE: Relative Entropy Integration for Competing Risks Models — CompRiskRE-package","title":"CompRiskRE: Relative Entropy Integration for Competing Risks Models — CompRiskRE-package","text":"CompRiskRE package provides functions discrete-time competing risks modeling Relative Entropy (RE) integration. supports composite failure time (CFT) prior models cause-specific prior models, includes simulation, model fitting, performance evaluation utilities.","code":""},{"path":"https://umkevinhe.github.io/CompRiskRE/reference/CompRiskRE-package.html","id":"installation","dir":"Reference","previous_headings":"","what":"Installation","title":"CompRiskRE: Relative Entropy Integration for Competing Risks Models — CompRiskRE-package","text":"can install package GitHub:","code":"devtools::install_github(\"UM-KevinHe/CompRiskRE\")"},{"path":[]},{"path":"https://umkevinhe.github.io/CompRiskRE/reference/CompRiskRE-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"CompRiskRE: Relative Entropy Integration for Competing Risks Models — CompRiskRE-package","text":"Maintainer: Yubo Shao ybshao@umich.edu Authors: Qinmengge Li liqinmg@umich.edu","code":""},{"path":"https://umkevinhe.github.io/CompRiskRE/reference/CompRiskRE_CP.html","id":null,"dir":"Reference","previous_headings":"","what":"Competing Risks with Relative Entropy Integration with a Competing Risk Prior Model — CompRiskRE_CP","title":"Competing Risks with Relative Entropy Integration with a Competing Risk Prior Model — CompRiskRE_CP","text":"function implements Relative Entropy (RE) framework discrete-time competing risk models prior model competing risk prior model.","code":""},{"path":"https://umkevinhe.github.io/CompRiskRE/reference/CompRiskRE_CP.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Competing Risks with Relative Entropy Integration with a Competing Risk Prior Model — CompRiskRE_CP","text":"","code":"CompRiskRE_CP(   beta_cor = 0.9,   eta,   N_ext = 5000,   N_loc = 2000,   N_val = 200,   N_test = 5000,   nCause = 2,   mu = 1,   sigma = 0.05,   seed = 123 )"},{"path":"https://umkevinhe.github.io/CompRiskRE/reference/CompRiskRE_CP.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Competing Risks with Relative Entropy Integration with a Competing Risk Prior Model — CompRiskRE_CP","text":"beta_cor Numeric correlation level external local models. Must one 1.0, 0.9, 0.7, 0.5, 0.4, 0.3, 0.1, 0. eta Numeric vector Relative Entropy regularization parameters. N_ext Sample size external data (default: 5000). N_loc Sample size local data (default: 2000). N_val Sample size validation data (default: 200). N_test Sample size test data (default: 5000). nCause Number competing causes (default: 2). mu Mean covariates (default: 1). sigma Standard deviation covariates (default: 0.05). seed Random seed reproducibility.","code":""},{"path":"https://umkevinhe.github.io/CompRiskRE/reference/CompRiskRE_CP.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Competing Risks with Relative Entropy Integration with a Competing Risk Prior Model — CompRiskRE_CP","text":"list two components: models Fitted models: prior, local, joint,   KL (per eta value). metrics Performance results including validation/test deviance,   C-indices, AIC across eta values.","code":""},{"path":"https://umkevinhe.github.io/CompRiskRE/reference/CompRiskRE_CP.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Competing Risks with Relative Entropy Integration with a Competing Risk Prior Model — CompRiskRE_CP","text":"","code":"if (FALSE) { # \\dontrun{ eta <- generate_eta(method = \"exponential\", n = 30, max_eta = 30) res <- CompRiskRE_CP(beta_cor = 0.9, eta = eta, seed = 2024) res$metrics } # }"},{"path":"https://umkevinhe.github.io/CompRiskRE/reference/CompRiskRE_FT.html","id":null,"dir":"Reference","previous_headings":"","what":"Competing Risks with Relative Entropy Integration with a Composite Failure Time Prior Model — CompRiskRE_FT","title":"Competing Risks with Relative Entropy Integration with a Composite Failure Time Prior Model — CompRiskRE_FT","text":"function implements Relative Entropy (RE) framework discrete-time competing risk models prior model specified composite failure time formulation.","code":""},{"path":"https://umkevinhe.github.io/CompRiskRE/reference/CompRiskRE_FT.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Competing Risks with Relative Entropy Integration with a Composite Failure Time Prior Model — CompRiskRE_FT","text":"","code":"CompRiskRE_FT(   beta_cor = 0.9,   eta,   N_ext = 5000,   N_loc = 2000,   N_val = 200,   N_test = 5000,   nCause = 2,   mu = 1,   sigma = 0.05,   seed = 123 )"},{"path":"https://umkevinhe.github.io/CompRiskRE/reference/CompRiskRE_FT.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Competing Risks with Relative Entropy Integration with a Composite Failure Time Prior Model — CompRiskRE_FT","text":"beta_cor Numeric correlation level external local models. Must one 1.0, 0.9, 0.5, 0.1, 0. eta Numeric vector Relative Entropy regularization parameters. N_ext Sample size external data (default: 5000). N_loc Sample size local data (default: 2000). N_val Sample size validation data (default: 200). N_test Sample size test data (default: 5000). nCause Number competing causes (default: 2). mu Mean covariates (default: 1). sigma Standard deviation covariates (default: 0.05). seed Random seed reproducibility. p Number covariates (default: 4). Tmax Maximum follow-time (default: 10).","code":""},{"path":"https://umkevinhe.github.io/CompRiskRE/reference/CompRiskRE_FT.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Competing Risks with Relative Entropy Integration with a Composite Failure Time Prior Model — CompRiskRE_FT","text":"list two components: models Fitted models: prior, local, joint,   KL (per eta value). metrics Performance results including validation/test deviance,   C-indices, AIC across eta values.","code":""},{"path":"https://umkevinhe.github.io/CompRiskRE/reference/CompRiskRE_FT.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Competing Risks with Relative Entropy Integration with a Composite Failure Time Prior Model — CompRiskRE_FT","text":"","code":"if (FALSE) { # \\dontrun{ eta <- generate_eta(method = \"exponential\", n = 30, max_eta = 30) res <- CompRiskRE_FT(beta_cor = 0.9, eta = eta, seed = 2024) res$metrics } # }"},{"path":"https://umkevinhe.github.io/CompRiskRE/reference/CompRiskRE_XGBoost_CP.html","id":null,"dir":"Reference","previous_headings":"","what":"Competing Risks with Relative Entropy Integration (Composite Prior, XGBoost) — CompRiskRE_XGBoost_CP","title":"Competing Risks with Relative Entropy Integration (Composite Prior, XGBoost) — CompRiskRE_XGBoost_CP","text":"function implements Relative Entropy (RE) framework discrete-time competing risks models prior model specified composite failure time formulation prior/local models fit using XGBoost.","code":""},{"path":"https://umkevinhe.github.io/CompRiskRE/reference/CompRiskRE_XGBoost_CP.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Competing Risks with Relative Entropy Integration (Composite Prior, XGBoost) — CompRiskRE_XGBoost_CP","text":"","code":"CompRiskRE_XGBoost_CP(   prior_model,   train_data,   test_data,   eta,   xgb_params = list(objective = \"multi:softprob\", eval_metric = \"mlogloss\", num_class =     3, max.depth = 4),   nrounds = 100 )"},{"path":"https://umkevinhe.github.io/CompRiskRE/reference/CompRiskRE_XGBoost_CP.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Competing Risks with Relative Entropy Integration (Composite Prior, XGBoost) — CompRiskRE_XGBoost_CP","text":"prior_model fitted prior XGBoost model. train_data data.frame containing training data columns: covariates, discrete follow-time (time_y), event indicator (event). test_data data.frame containing test data structure train_data. eta Numeric vector RE regularization parameters. xgb_params list XGBoost parameters. Defaults list(objective = \"multi:softprob\", eval_metric = \"mlogloss\", num_class = 3, max.depth = 4). nrounds Integer, number boosting rounds XGBoost (default: 100).","code":""},{"path":"https://umkevinhe.github.io/CompRiskRE/reference/CompRiskRE_XGBoost_CP.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Competing Risks with Relative Entropy Integration (Composite Prior, XGBoost) — CompRiskRE_XGBoost_CP","text":"list components: models named list fitted XGBoost models \\(\\eta = 0\\) supplied eta. PD numeric vector predictive deviance values test data. prior_PD Predictive deviance prior model test data. eta vector eta values, including \\(0\\) baseline model.","code":""},{"path":"https://umkevinhe.github.io/CompRiskRE/reference/CompRiskRE_XGBoost_FT.html","id":null,"dir":"Reference","previous_headings":"","what":"Competing Risks with Relative Entropy Integration using XGBoost and Composite Failure Time Prior — CompRiskRE_XGBoost_FT","title":"Competing Risks with Relative Entropy Integration using XGBoost and Composite Failure Time Prior — CompRiskRE_XGBoost_FT","text":"function implements Relative Entropy (RE) framework discrete-time competing risks models prior model specified composite failure time formulation local model fit using XGBoost.","code":""},{"path":"https://umkevinhe.github.io/CompRiskRE/reference/CompRiskRE_XGBoost_FT.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Competing Risks with Relative Entropy Integration using XGBoost and Composite Failure Time Prior — CompRiskRE_XGBoost_FT","text":"","code":"CompRiskRE_XGBoost_FT(   prior_model,   train_data,   test_data,   eta,   xgb_params = list(objective = \"multi:softprob\", eval_metric = \"mlogloss\", num_class =     3, max.depth = 4),   nrounds = 100,   maxiter = 1,   eps = 1e-06 )"},{"path":"https://umkevinhe.github.io/CompRiskRE/reference/CompRiskRE_XGBoost_FT.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Competing Risks with Relative Entropy Integration using XGBoost and Composite Failure Time Prior — CompRiskRE_XGBoost_FT","text":"prior_model fitted prior multinomial model. train_data data.frame containing training data. test_data data.frame containing test data. eta Numeric vector RE regularization parameters. xgb_params list XGBoost parameters.. nrounds Integer, number boosting rounds XGBoost (default: 100). maxiter Integer, maximum number RE updates priorFTKL_XGBoost (default: 1). eps Numeric tolerance convergence priorFTKL_XGBoost (default: 1e-6).","code":""},{"path":"https://umkevinhe.github.io/CompRiskRE/reference/CompRiskRE_XGBoost_FT.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Competing Risks with Relative Entropy Integration using XGBoost and Composite Failure Time Prior — CompRiskRE_XGBoost_FT","text":"list two components: models named list fitted XGBoost models supplied eta. PD numeric vector predictive deviance values test data. eta vector eta values.","code":""},{"path":"https://umkevinhe.github.io/CompRiskRE/reference/dataLong.html","id":null,"dir":"Reference","previous_headings":"","what":"Expand Survival Data into Long Format for Discrete-Time Models — dataLong","title":"Expand Survival Data into Long Format for Discrete-Time Models — dataLong","text":"Expand Survival Data Long Format Discrete-Time Models","code":""},{"path":"https://umkevinhe.github.io/CompRiskRE/reference/dataLong.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expand Survival Data into Long Format for Discrete-Time Models — dataLong","text":"","code":"dataLong(   dataSet,   timeColumn,   censColumn,   timeAsFactor = TRUE,   remLastInt = FALSE,   aggTimeFormat = FALSE,   lastTheoInt = NULL )"},{"path":"https://umkevinhe.github.io/CompRiskRE/reference/dataLong.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expand Survival Data into Long Format for Discrete-Time Models — dataLong","text":"dataSet data.frame containing survival data. timeColumn character string giving name column observed survival times. censColumn character string giving name column event indicator (0 = censored, 1 = event). timeAsFactor Logical; TRUE, time intervals returned factor, otherwise numeric values. remLastInt Logical; TRUE, removes observations final interval hazard always 1. aggTimeFormat Logical; TRUE, expands fixed number intervals given lastTheoInt, regardless observed time. lastTheoInt Integer; maximum theoretical number intervals. Required aggTimeFormat = TRUE.","code":""},{"path":"https://umkevinhe.github.io/CompRiskRE/reference/dataLong.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expand Survival Data into Long Format for Discrete-Time Models — dataLong","text":"data.frame long format columns: obj: subject index timeInt: discrete time interval y: binary event indicator interval original variables dataSet","code":""},{"path":"https://umkevinhe.github.io/CompRiskRE/reference/generate_eta.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a Sequence of Tuning Parameters (eta) — generate_eta","title":"Generate a Sequence of Tuning Parameters (eta) — generate_eta","text":"Generate Sequence Tuning Parameters (eta)","code":""},{"path":"https://umkevinhe.github.io/CompRiskRE/reference/generate_eta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a Sequence of Tuning Parameters (eta) — generate_eta","text":"","code":"generate_eta(method = \"exponential\", n = 10, max_eta = 5)"},{"path":"https://umkevinhe.github.io/CompRiskRE/reference/generate_eta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a Sequence of Tuning Parameters (eta) — generate_eta","text":"method Character string specifying method generate `eta`. Options `\"linear\"` linearly spaced sequence, `\"exponential\"` exponentially spaced sequence scaled `max_eta`. Default `\"exponential\"`. n Integer, number `eta` values generate. Default 10. max_eta Numeric, maximum value `eta` sequence. Default 5.","code":""},{"path":"https://umkevinhe.github.io/CompRiskRE/reference/generate_eta.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a Sequence of Tuning Parameters (eta) — generate_eta","text":"Numeric vector length `n` containing generated `eta` values.","code":""},{"path":"https://umkevinhe.github.io/CompRiskRE/reference/generate_eta.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a Sequence of Tuning Parameters (eta) — generate_eta","text":"","code":"# Generate 10 exponentially spaced eta values up to 5 generate_eta(method = \"exponential\", n = 10, max_eta = 5) #>  [1] 0.00000000 0.03374245 0.09002825 0.18391863 0.34053721 0.60179276 #>  [7] 1.03759328 1.76455236 2.97719318 5.00000000  # Generate 5 linearly spaced eta values up to 3 generate_eta(method = \"linear\", n = 5, max_eta = 3) #> [1] 0.00 0.75 1.50 2.25 3.00"},{"path":"https://umkevinhe.github.io/CompRiskRE/reference/prob_n.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate event times from a discrete competing risks model — prob_n","title":"Simulate event times from a discrete competing risks model — prob_n","text":"Generates event times multiple competing risks discrete-time hazard specification.","code":""},{"path":"https://umkevinhe.github.io/CompRiskRE/reference/prob_n.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate event times from a discrete competing risks model — prob_n","text":"","code":"prob_n(x, betat, betav, N, p, Tmax, nCause, unif = TRUE)"},{"path":"https://umkevinhe.github.io/CompRiskRE/reference/prob_n.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate event times from a discrete competing risks model — prob_n","text":"x Covariate matrix (\\(N \\times p\\)). betat Time-related parameters. betav Covariate-related parameters. N Number individuals. p Number covariates. Tmax Maximum number discrete time points. nCause Number competing risks. unif Logical; TRUE, last column sampled uniformly, otherwise logistic model.","code":""},{"path":"https://umkevinhe.github.io/CompRiskRE/reference/prob_n.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate event times from a discrete competing risks model — prob_n","text":"numeric matrix dimension \\(N \\times (nCause+1)\\) entry   simulated event time (censoring time) given individual risk.","code":""},{"path":"https://umkevinhe.github.io/CompRiskRE/reference/simulate_CPFT.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate external, local, validation, and test datasets — simulate_CPFT","title":"Simulate external, local, validation, and test datasets — simulate_CPFT","text":"function generates four datasets (external, local, validation, test) discrete-time competing risks models. data simulated based user-specified correlation level beta_cor local external regression coefficients.","code":""},{"path":"https://umkevinhe.github.io/CompRiskRE/reference/simulate_CPFT.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate external, local, validation, and test datasets — simulate_CPFT","text":"","code":"simulate_CPFT(   beta_cor = 0.9,   N_ext = 5000,   N_loc = 2000,   N_val = 200,   N_test = 5000,   p = 4,   Tmax = 10,   nCause = 2,   mu = 1,   sigma = 0.05,   seed = 123 )"},{"path":"https://umkevinhe.github.io/CompRiskRE/reference/simulate_CPFT.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate external, local, validation, and test datasets — simulate_CPFT","text":"beta_cor Numeric correlation level external local models. Must one 1.0, 0.9, 0.5, 0.1, 0. N_ext Sample size external data (default: 5000). N_loc Sample size local data (default: 2000). N_val Sample size validation data (default: 200). N_test Sample size test data (default: 5000). p Number covariates (default: 4). Tmax Maximum follow-time (discrete intervals) (default: 10). nCause Number competing causes (default: 2). mu Mean covariates (default: 1). sigma Standard deviation covariates (default: 0.05). seed Random seed reproducibility (default: 123).","code":""},{"path":"https://umkevinhe.github.io/CompRiskRE/reference/simulate_CPFT.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate external, local, validation, and test datasets — simulate_CPFT","text":"list containing: external List simulated external data: X, Z, y local List simulated local data: X, Z, y validation List simulated validation data: X, Z, y test List simulated test data: X, Z, y Betat_l Baseline time coefficients local model Betav_l Covariate coefficients local model Betat_p Baseline time coefficients external model Betav_p Covariate coefficients external model","code":""}]
